section.replace-me
  header
    h1
      = t("users.headers.#{ item_name }")
  - if resource.is? current_user
    nav
      - if item_name == :templates
        = link_to t('article_templates.actions.new'),
          new_article_template_path, class: 'Button'
      - if local_assigns.has_key? :item_link
        = link_to t('users.text.new_article'), item_link,
          class: 'Button'
      - if current_user.is_a?(LegalEntity)
        - unless articles.empty? && item_name == :templates
          = link_to t("users.export.articles"),
            exports_show_path(kind_of_article: item_name, format: "csv"),
            class: "Button"
        - if !articles.empty? && item_name == :active_articles
          = link_to t("mass_uploads.labels.update_articles_via_csv"),
            new_mass_upload_path,
            class: "Button"
    section
      - if articles.empty?
        = t("users.text.no_#{item_name}")
      - else
        .ArticleListview
          - articles.each do |article|
            = render layout: '/articles/shared/listitem', locals: { article: article, actions: true } do
              - if policy(article).edit?
                =< link_to t('article.titles.edit'), edit_article_path(article.id)
              - else
                =< link_to t('article.titles.edit'), new_article_path(edit_as_new: article.id)
              =< link_to t('common.actions.destroy'), article_path(article.id), method: :delete, remote: true
              =< link_to t('article.labels.deactivate'), article_path(article.id, deactivate: true), method: :put, confirm: t('article.deactivate_confirm'), remote: true

        = paginate articles

  - else
    / Show user's articles for other visitors
    .articles
      = render '/articles/shared/articles_grid', articles: articles
    = paginate articles, param_name: 'active_articles_page'
